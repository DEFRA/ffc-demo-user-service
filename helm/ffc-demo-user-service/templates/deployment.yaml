apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ quote .Values.name }}
  labels:
    app.kubernetes.io/name: ffc-demo-user-service
    app.kubernetes.io/instance: ffc-demo-user-service-hssh
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/component: service
    app.kubernetes.io/part-of: ffc-demo
    app.kubernetes.io/managed-by: helm
spec:
  replicas: {{ .Values.replicaCount }}
  minReadySeconds: {{ .Values.minReadySeconds }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: {{ .Values.maxSurge }}
      maxUnavailable: {{ .Values.maxUnavailable }}
  template:
    metadata:
      labels:
        app: {{ quote .Values.name }}
        environment: {{ quote .Values.environment }}
      annotations:
        redeployOnChange: {{ quote .Values.container.redeployOnChange }}
    spec:
      restartPolicy: {{ quote .Values.container.restartPolicy }}
      {{- if .Values.imagePullSecret }}
      imagePullSecrets:
      - name: {{ quote .Values.imagePullSecret }}
      {{- end }}
      initContainers:
        - name:  "{{ .Values.name }}-migrate"
          image: {{ quote .Values.image }}
          command: ['npm', 'run', 'migrate']
          env:
            - name: POSTGRES_USERNAME
              value: {{ quote .Values.postgresUsername }}
            - name: POSTGRES_PASSWORD
              value: {{ quote .Values.postgresPassword }}
            - name: POSTGRES_DB
              value: {{ quote .Values.postgresDatabase }}
            - name: POSTGRES_HOST
              value: {{ quote .Values.postgresHost }}
            - name: POSTGRES_PORT
              value: {{ quote .Values.postgresPort }}
      containers:
        - name: {{ quote .Values.name }}
          image: {{ quote .Values.image }}
        {{- if .Values.container.command }}
        {{- with .Values.container.command }}
          command:
            {{- toYaml . | nindent 12 }}
        {{- end }}
        {{- with .Values.container.args }}
          args:
            {{- toYaml . | nindent 12 }}
        {{- end }}
        {{- end }}
          imagePullPolicy: {{ quote .Values.container.imagePullPolicy }}
          securityContext:
            runAsUser: {{ .Values.container.runAsUser }}
            runAsNonRoot: {{ .Values.container.runAsNonRoot }}
            readOnlyRootFilesystem: {{ .Values.container.readOnlyRootFilesystem }}
            allowPrivilegeEscalation: {{ .Values.container.allowPrivilegeEscalation }}
          ports:
            - name: http
              containerPort: 3002
              protocol: TCP
          resources:
            requests:
                memory: {{ quote .Values.container.requestMemory }}
                cpu: {{ quote .Values.container.requestCpu }}
            limits:
                memory: {{ quote .Values.container.limitMemory }}
                cpu: {{ quote .Values.container.limitCpu }}
          env:
            - name: NODE_ENV
              value: {{ quote .Values.environment }}
            - name: POSTGRES_USERNAME
              value: {{ quote .Values.postgresUsername }}
            - name: POSTGRES_PASSWORD
              value: {{ quote .Values.postgresPassword }}
            - name: POSTGRES_DB
              value: {{ quote .Values.postgresDatabase }}
            - name: POSTGRES_HOST
              value: {{ quote .Values.postgresHost }}
            - name: POSTGRES_PORT
              value: {{ quote .Values.postgresPort }}
            - name: PORT
              value: "3002"
          livenessProbe:
            httpGet:
              path: {{ quote .Values.livenessProbe.path }}
              port: {{ .Values.livenessProbe.port }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          readinessProbe:
            httpGet:
              path: {{ quote .Values.readinessProbe.path }}
              port: {{ .Values.readinessProbe.port }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
